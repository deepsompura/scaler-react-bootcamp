{"version":3,"sources":["components/Bootstrap/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","dark","children","className","to","Link","App","state","Dark","toggleHeader","setState","this","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAoBeA,EApBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAE7C,OADAJ,EAASA,EAAO,OAAS,QAEvB,qBACEE,UACE,wBAAiBF,EAAjB,eAA4BA,IAAUE,EAAY,IAAMA,EAAY,IAFxE,SAKGC,EACC,cAACC,EAAD,CAAMD,GAAIA,EAAID,UAAU,eAAxB,SACGD,IAGH,sBAAMC,UAAU,eAAhB,SAAgCD,OCVpCI,E,4MACJC,MAAQ,CACNC,MAAM,G,EAERC,aAAe,WACb,EAAKC,SAAS,CACZF,MAAO,EAAKD,MAAMC,Q,4CAGtB,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,eAAC,EAAD,CAAQF,KAAMU,KAAKJ,MAAMC,KAAML,UAAU,8BAAzC,UACE,2EACA,wBACEA,UAAU,qDACVS,QAASD,KAAKF,aAFhB,SAIE,mBACEN,UAAW,UAAYQ,KAAKJ,MAAMC,KAAO,MAAQ,QAAU,kB,GAnBvDK,aA4BHP,ICnBAQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.77b2f037.chunk.js","sourcesContent":["const Header = ({ dark, children, className, to, Link }) => {\r\n    dark = !!dark ? \"dark\" : \"light\";\r\n    return (\r\n      <nav\r\n        className={\r\n          `navbar navbar-${dark} bg-${dark}` + (className ? \" \" + className : \"\")\r\n        }\r\n      >\r\n        {to ? (\r\n          <Link to={to} className=\"navbar-brand\">\r\n            {children}\r\n          </Link>\r\n        ) : (\r\n          <span className=\"navbar-brand\">{children}</span>\r\n        )}\r\n      </nav>\r\n    );\r\n  };\r\n  \r\n  \r\nexport default Header;","import React, { Component } from \"react\";\nimport Header from \"./Bootstrap/Header\";\n\nclass App extends Component {\n  state = {\n    Dark: true\n  };\n  toggleHeader = () => {\n    this.setState({\n      Dark: !this.state.Dark\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Header dark={this.state.Dark} className=\"mb-5 justify-content-center\">\n          <span>Deep Sompura Tech - Portfolio Generator</span>\n          <button\n            className=\"btn btn-sm btn-outline-primary ml-3 rounded-circle\"\n            onClick={this.toggleHeader}\n          >\n            <i\n              className={\"fa fa-\" + (this.state.Dark ? \"sun\" : \"moon\") + \"-o\"}\n            ></i>\n          </button>\n        </Header>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}